
#include <iostream>
#include <string.h>


using namespace std;
// const char *datos[] = {
// "..##.......",
// "#...#...#..",
// ".#....#..#.",
// "..#.#...#.#",
// ".#...##..#.",
// "..#.##.....",
// ".#.#.#....#",
// ".#........#",
// "#.##...#...",
// "#...##....#",
// ".#..#...#.#"};

const char *datos[] = {
    "...#...#..#....#..#...#..##..#.",
    ".#..#.....#.#............###...",
    ".#...###....#.............##..#",
    "...##...##....#.....##..#.##...",
    ".....###.#.###..##.#.##.......#",
    "#...##.....#..........#..#.#.#.",
    "......##.......##..#....#.#....",
    "....#.###.##..#.#..##.##....#.#",
    ".......#.......###.#.#.##.....#",
    ".........#.#....#..........#.#.",
    ".#...##.....##.........#..#....",
    ".##....#.#.#...##......#.......",
    "##.#.#..#....#....#....#...#.#.",
    "##....#.#..##......#....##...#.",
    "....#..#..##..#.###.......#.#..",
    ".....##....###...........#.#.##",
    "#.....##.........#....##......#",
    "........###.#..#....#....#.....",
    "...#.......#.##..#.###......#..",
    "...............#..#....#.##....",
    "..#..###..#.#..#.........##..#.",
    "####..#..####..................",
    "#...####...#.......#.#.#...#...",
    "......###.....#......#..#..#...",
    "#...#.....##.....#.#..##...#.#.",
    "#...........##.......#.........",
    ".#..#.........#.#..##....#.....",
    "........##...#................#",
    "........#.###.#.###.#.#.##..##.",
    ".#....##.....#...##.#..#.#.....",
    "..#..#.....###....##.#....#.#.#",
    "#......##.##...##..#.........#.",
    "#..#..#.....#.....#.........#..",
    "#....#.#...###.........#...#...",
    ".#.#.....##......#.#......#....",
    "..##......##...#.#.#.#.........",
    "..#......#.....##.###.#.#..#...",
    "....#..#.......#..#..#.....#...",
    ".#.#.....#...#..........#......",
    "#.#..#...........#.#.##.#...#.#",
    "..#.#....###...#...#.....#.#...",
    "....##.#.###....####.......#...",
    ".....##....#.......#..#..#....#",
    "...##..#.#.#.#......#......#...",
    "...##...#....#...#......###...#",
    "........#..#.#.....#.###.......",
    "..#..##.#....#.#.........#...#.",
    ".....#.####....#.##.........#..",
    "......#...#...#.....#......###.",
    ".##.....#....#..#.#....#.....#.",
    "...........#...#....##..#...#..",
    ".....#....#.....#...##..#...#.#",
    ".#...#.........#.......#...#..#",
    "...#..#...#........#......#....",
    "..#..#####.#.....#.#....#...#.#",
    "...#.......#.#....#...##..#..#.",
    "####..#.#.###.#.#..............",
    ".##........#...#.#....#..#.....",
    "..#..............#.#..##...#.##",
    ".###.#.....#.#.....##.#......##",
    "....###.....#...#...#.#..#.....",
    "....###.#.##.......#....#...#..",
    "#..#...#......##..#.....#.#...#",
    "....#.#.........#..............",
    "#.##.##...#..#.#.#.....#...#.##",
    "#...#...#......#...........##..",
    "#.#.#......#............#.#....",
    ".#.#..######...#.#.........#.##",
    "..#.#..#...#......#............",
    "....#.....#......##..#.....#...",
    ".##............#....##..#......",
    ".#.#.#...#.##.............###.#",
    "#.#...#...#.....#....#.#.#.....",
    "........#..#......##.##.#.....#",
    ".....#.....#.#####...#....#....",
    ".#...#......#.........#.#......",
    "...#...#..##.....##....#..#....",
    "....#....##..#.........#.......",
    "..#........##..#.#........#....",
    "...#...##...........#...#....#.",
    ".....##.........#..#....#..#.#.",
    "#..#....##..#...##.....#..##.#.",
    "..#.#.#.#...#...#.....#.#....#.",
    ".......#.###...#.#.......#.#...",
    "....#..#..#.###.#.....###..#.#.",
    ".#..##......#..#..#....#.####..",
    "..##...........#...#.........#.",
    "......#..#...#..........#......",
    "....#..........#......##...#...",
    "....#..#.##........#.#...##.#..",
    "#.##......#........##.#...#...#",
    "#..#....#.....###........##....",
    "...........##.....##..#....#.##",
    "..#....#..#..#......#.#.....#..",
    "#....#.##....#.....##.......#..",
    ".#.....#.#..............#.##..#",
    ".#..#..#...#...#....#.#.....#..",
    "...###...##.#...#..#........#..",
    "#...#.##.#.....#.#....#..#.....",
    "#.....###.#.......#.#..#.#..##.",
    "....#..#..##.......###.#...#...",
    ".#...####...............#.....#",
    ".#.##.#.....#.....#.#......##.#",
    "#...........#.##....###.##....#",
    "...............#..........#....",
    ".....#..#.##.###.#.............",
    "...##.............#.....#.#..#.",
    "....#.#...#.#..#..#..#....#....",
    "..#.......#..........#...#...#.",
    "...............#.#.#...###....#",
    "....#...#.##....#..##....#.....",
    "........#.#.##.........##.##.##",
    "#.....###.......#.#....#..#..##",
    ".#..#...#......#.#..##.......#.",
    "#.....#.#........#.##..#..#....",
    ".###..##.#.......#......###....",
    ".#...###.....#.....#....###...#",
    "........##.##......#.#....#...#",
    ".#....#..#.........#..##...##..",
    ".......#.......##.#..#..##.....",
    "#..##..##......#.#......#.##...",
    "..#..###..#...#....#..#...#....",
    "#.............#.####.........##",
    "..#..................#...#..#..",
    "..#......#........##.......#.#.",
    ".#.#.#.#..###.....#....#.#.....",
    "...#.##.###.......#....#.......",
    "................##...#.....#...",
    "..#.###.#...#.####....#..#..#..",
    "..#....###....##..#.#.........#",
    ".#..#.#.....#........#....##...",
    ".....#..#......#..#..##.#.#....",
    ".#..#.........##....##......#..",
    ".....#.#...#...#.#...#.#...#.#.",
    "..#..#...#...#...##.#..###.....",
    "..#..##......#..##.#...##......",
    ".......#..##....##.#......#..#.",
    "..#......#.#.....#.##....##....",
    "..#....#......#......##........",
    "....##.#.#....#.......#.##.....",
    "#.....#...###....#....#...#....",
    "............#.#..#...#...#..#..",
    "..##.............##....#.......",
    ".#.......#.##.#......#....##...",
    "...##............#....#..#...#.",
    ".##.####.....#.#..###.#....#.##",
    "....##.#........#..#...#.......",
    "...#...###.##...........##..#..",
    "..##..##....#...#..#..........#",
    "..#.........#.#...##..........#",
    ".......##....#.#...##.....#..#.",
    ".............#.....#.#.......#.",
    "#.......#..##..##...##.#.......",
    "..............#.....#.#..#...##",
    "........##..#.....#...#...#.#..",
    "###.#.................#........",
    "...#........#...#.#######..#..#",
    "...#.##...##.#.#..######...#...",
    "#.......#..#....#..#.##.....#..",
    "#..#....##....#.##.......#....#",
    "#...#..#.#.#...#..#.##..#......",
    "....#..##....#..#.#...........#",
    ".##..#.#.............###.......",
    "#....##......#..#..#.....###...",
    "..#..........#...###.#.........",
    ".####......#....#......#.#....#",
    "..#....#.#.#......#....#.......",
    ".....#.....#....#....#####....#",
    ".##..........#...#.###....#....",
    "....##.....##......#...#.#.....",
    ".#...#...#..#.#.#...#####......",
    "...#.##..####.##.##.......##...",
    "............#.......#..........",
    ".#..##.#..#####........#..#...#",
    "#......##..##..##.........##...",
    "....#....#.............#.#....#",
    "###..#.....#.....#.#...#..#.###",
    "#...#.......##......#....#.#.#.",
    "...#......#..#...#....#...###.#",
    "....#....##.......#....#......#",
    "............#......##.##.....#.",
    "...#.........#......#....##..##",
    ".....##....##...#..###...#..#..",
    ".......##.#..........#.##.##...",
    "....##...........#.#..#..#.##.#",
    "#...#..##.##.#....#....#.#.....",
    "...##.#.....#..#..#..###....##.",
    "#.##.#..#..#.#.............#...",
    "..#.#.............###.....#....",
    "...#..#....#..#.....#.#..#..#..",
    "...#.....##.#...........#..##.#",
    ".........#.#.##..#..#.#...#....",
    "...#..##..#...#...###.##.#..#..",
    ".#..##...##......##..##........",
    "......##....##.#.##.#.#........",
    "...#..................#.....#..",
    ".##................#.#..#..###.",
    ".##.##.....#................#..",
    ".....#.#..........#...#..#.#..#",
    ".............#......#..#.#..#..",
    "...#...##..#........#....#.....",
    "#......#........##.##...##.....",
    "##..#..##....#...#............#",
    "..##..##.##....##..##........#.",
    "...#....#.#.#.#....#.#...##....",
    "....#...##..##.#.##...#..#...#.",
    "#..#....##.#.....#.......#...##",
    "##.#....#.............#..#.....",
    ".##..#..#.#.....#.......#.#..#.",
    ".......#..#...##...#...###..#..",
    "..........#...#.#..##.....#...#",
    "..#....#...........#####....#..",
    "#....#..#.......##.............",
    ".........##..#####.......##....",
    "#..#..........#.....###...#..#.",
    ".#.#.#..#...#.......##...#####.",
    ".....#....#.###...#.......#....",
    "#.#.....##...###....###....#...",
    ".#.....#..#.#.#........#...#...",
    ".##.#.#.#......#....###....#...",
    ".#..##..####......###......#...",
    "......#.#.#.#.#...#...####.##..",
    ".#........##..#.....#....#....#",
    ".....###......##..#....#.......",
    "#.#.##...#.#......###..........",
    "........#.#...#..#......#....#.",
    "..##...##.........#.......#.#..",
    "..#.##....#...##.....#.###.....",
    ".........#..#.#....#....#.#.##.",
    "#.........#......#..#.......#..",
    "...#...##.......#.........#....",
    "............#......#...........",
    "##.....#.....#.#...#.....#.....",
    "..#.#...#..#...#.#...........#.",
    "#.#.#..#..#...##.#...#.#.....#.",
    ".#..###.#..##.#.....#.....#....",
    "##....##....#.......##..##.....",
    ".#..#...........###..........#.",
    ".#..#..#..........###..#.......",
    "#..###......#............##...#",
    "#......#........#..#..#..#.#...",
    ".......#.###...#.##............",
    ".##....#.......#.#...##.....#.#",
    "....#..#.#.......#.#...........",
    "##....#.###.#....#.#..##.#....#",
    "..#..#..#....#...#........##...",
    "...#...##....#..#.#...#..#.....",
    "......#..#......#....#.......#.",
    "#.#..............#...###...#..#",
    "...#....#..#..........#.#...#..",
    "#.....##..##.....#........#....",
    ".#...##..#.#..............#....",
    "##.#....#..##...#..#.####.#..#.",
    ".....#.......#.#.#.#..#.....###",
    "...#.##....#.#........##.......",
    "#...#.#...#.#..###..##.##...#.#",
    "###..............#.#.###.......",
    "...###..#.#..#....##...###.#...",
    "......##...........#...#..#...#",
    ".#..#.........##.......#..#...#",
    ".#.......###......##...#...#...",
    ".#......##...#........#.......#",
    ".#..#.....#.........#.#........",
    "#...#.#.....#...#..##.........#",
    "......##.#......##.#..##.#.....",
    "...............#.#..#....#....#",
    "#....#..#..#..#.#.....##...##..",
    "#.#......#.###......#..#...####",
    ".#.#..#...#...#.#..#.##.##.#.#.",
    ".....#.#...###...#.#.....##....",
    "...#..#.#..........##.#....#.#.",
    "...#..#.#.##.....###.##.#....#.",
    "..........#..###......#..#.#...",
    "###.....#..###..#...#..###.#...",
    "..#..#.....##.#.#..###.......#.",
    "....#....##........##..........",
    ".......#..........#...#......#.",
    ".#........#.#.#.#.#.......#....",
    ".#..#.......##..##....#.#...#..",
    ".#.#.#.......#..#..............",
    "#.#....#.#...#.#.#.....#.#...##",
    ".....#..........##..#.......#..",
    ".##......#.#....#.#.......#....",
    "..#.##....#.##.#...#...........",
    "...##......##..##.............#",
    "..........##.#.#..#..........#.",
    ".##....#..#..#.#....##.#...#.#.",
    "...........#....#.....#.#..#...",
    ".#.....#....##..#.........#....",
    ".....#.....#...#....#...#.###.#",
    "..#....#....#.....#...#......#.",
    ".....##..#.............#...#...",
    "........#..#.......#.#.......#.",
    "#...###..#.##.#...###...##..##.",
    "....##..#.......#...#.#........",
    ".#...#.#.##....####........#..#",
    ".#...#.#.####.##.#.............",
    "#..##...#....#...#.#.#.#.##..#.",
    ".#.......#........#.....###....",
    "#.#.....#....#..#....#..#....#.",
    "...#..#...#.....#.........##...",
    ".#....#......###...#....#.#.#..",
    "#.#........#......#...#....##..",
    ".....#..#......#..#..#......#..",
    ".#.....#..#.##.#.#.#...#......#",
    "##........#..#.#..#...#.####...",
    "..........##....#.#..#.#....#..",
    "#.##..#..#....#..#....##..#.#.#",
    "..#......#.......#...##..#.....",
    "##...#.........#......#......#.",
    ".#.....................#..#.##.",
    ".#.......#........#.#.#..##.#..",
    "..#..........#........#..##.#..",
    ".#...#...#.........##.#.#.#....",
    "....#....#.###.#....###....#.##",
    "....##......##........##.#.##..",
    "....#.#......#.##.#...#.##.....",
    "....#....#..#.#..###.#.#.......",
    "....#......#..#.#.......#..##..",
    ".....#..#.#.##.##..##.....#.#..",
    "...#....................##.....",
    "#.....#...##...#.#.............",
    "..#.#...#.#.#.....##..#....#..."};


long long countTree( int tam, int tamCadaFilaDatos, int derecha, int abajo){

    int aux = 0;
    int square = 0;
    int tree = 0;
    for (int i = 0; i < tam; i = i + abajo)
    {
        // cout << datos[i][aux] << endl;

        if (aux < tamCadaFilaDatos)
        {
            // cout << datos[i][aux] << endl;
            if (datos[i][aux] == '#')
            {
                tree = tree + 1;
            }
            aux = aux + derecha;
        }
        else
        {
            aux = aux % tamCadaFilaDatos;
            // cout << datos[i][aux] << endl;
            if (datos[i][aux] == '#')
            {
                tree = tree + 1;
            }
            aux = aux + derecha;
        }
    }
    return tree;
}


int main()
{

    int tam = sizeof(datos) / sizeof(datos[0]);
    // cout << tam << endl ;

    int tamCadaFilaDatos = 0;
    tamCadaFilaDatos = strlen(datos[0]);
    // cout << tamCadaFilaDatos << endl;

    
    cout << "cantidad de arboles : " << countTree(tam, tamCadaFilaDatos, 1, 1) << endl;
    cout << "cantidad de arboles : " << countTree(tam, tamCadaFilaDatos, 3, 1) << endl;
    cout << "cantidad de arboles : " << countTree(tam, tamCadaFilaDatos, 5, 1) << endl;
    cout << "cantidad de arboles : " << countTree(tam, tamCadaFilaDatos, 7, 1) << endl;
    cout << "cantidad de arboles : " << countTree(tam, tamCadaFilaDatos, 1, 2) << endl;

    long long multiplicacion = 0;
    long long ejemplo1 = countTree(tam, tamCadaFilaDatos, 1, 1);
    long long ejemplo2 = countTree(tam, tamCadaFilaDatos, 3, 1);
    long long ejemplo3 = countTree(tam, tamCadaFilaDatos, 5, 1);
    long long ejemplo4 = countTree(tam, tamCadaFilaDatos, 7, 1);
    long long ejemplo5 = countTree(tam, tamCadaFilaDatos, 1, 2);


    multiplicacion =  ejemplo1 * ejemplo2 * ejemplo3 * ejemplo4 *  ejemplo5;

    cout << multiplicacion << endl;

    return 0;
}